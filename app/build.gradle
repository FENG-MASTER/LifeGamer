apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.lifegamer.fengmaster.lifegamer"
        minSdkVersion 22
        multiDexEnabled true
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }
        debug {
            minifyEnabled false
            debuggable true
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })


    api('com.jakewharton:butterknife:8.8.1') {
        exclude module: 'support-compat'
//        解决依赖问题
    }
    implementation "com.mikepenz:iconics-core:3.0.0"
    implementation 'com.android.support:appcompat-v7:27.0.0'


    implementation 'com.mikepenz:google-material-typeface:3.0.1.3.original@aar'
    implementation 'com.mikepenz:material-design-iconic-typeface:2.2.0.5@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.3.1.1@aar'
    implementation 'com.mikepenz:octicons-typeface:3.2.0.5@aar'
    implementation 'com.mikepenz:meteocons-typeface:1.1.0.5@aar'
    implementation 'com.mikepenz:community-material-typeface:2.7.94.1@aar'
    implementation 'com.mikepenz:weather-icons-typeface:2.0.10.5@aar'
    implementation 'com.mikepenz:typeicons-typeface:2.0.7.5@aar'
    implementation 'com.mikepenz:entypo-typeface:1.0.0.5@aar'
    implementation 'com.mikepenz:devicon-typeface:2.0.0.5@aar'
    implementation 'com.mikepenz:foundation-icons-typeface:3.0.0.5@aar'
    implementation 'com.mikepenz:ionicons-typeface:2.0.1.5@aar'
    implementation 'com.mikepenz:pixeden-7-stroke-typeface:1.2.0.3@aar'


    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    //stream兼容包
    api 'com.annimon:stream:1.1.9'
//    implementation 'com.android.support:appcompat-v7:23.4.0'
    api 'com.android.support:support-v4:27.1.1'
    api 'com.android.support:design:27.1.1'
    api 'com.android.support.constraint:constraint-layout:1.1.2'
    api 'io.reactivex.rxjava2:rxjava:2.1.9'
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    api 'org.greenrobot:eventbus:3.1.1'
    api 'com.github.aakira:expandable-layout:1.6.0@aar'
    api 'org.aspectj:aspectjrt:1.8.13'
    testImplementation 'junit:junit:4.12'

}


import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger
final def variants = project.android.applicationVariants
variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return
    }
    TaskProvider tp = variant.javaCompileProvider
    JavaCompile javaCompile= tp.get()
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.5",
                         "-inpath",
                         javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " +Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true)
        new Main().run(args, handler)
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT: case IMessage.ERROR: case IMessage.FAIL: log.error message.message, message.thrown
                    break case IMessage.WARNING: log.warn message.message, message.thrown
                    break case IMessage.INFO: log.info message.message, message.thrown
                    break case IMessage.DEBUG: log.debug message.message, message.thrown
                    break
            }
        }
    }
}
